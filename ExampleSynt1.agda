-- –ø—Ä–∏–º–µ—Ä—ã: –±–∏–Ω–∞—Ä–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è + –ø–æ—Ä–æ–∂–¥–µ–Ω–∏–µ –º–Ω-–≤–∞ –±–∏–Ω–∞—Ä–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π
{-# OPTIONS --cubical --warning=noUnsupportedIndexedMatch #-}
{-# OPTIONS --guardedness #-}

open import Cubical.Foundations.Prelude
open import Cubical.Foundations.HLevels

module _ where

open import Cubical.Foundations.Powerset using (‚Ñô; isSet‚Ñô; _‚àà_)
open import Cubical.Foundations.Function --using (uncurry)
open import Cubical.Foundations.Structure using (‚ü®_‚ü©)
open import Cubical.Data.Bool using (Bool; true; false; isSetBool)
open import Cubical.Data.Empty using (‚ä•*; isProp‚ä•*)
open import Cubical.Data.FinData using (Fin; zero; suc; one; two; three; four; five; to‚Ñï)
open import Cubical.Data.Nat using (‚Ñï; zero; suc; _+_; _‚à∏_; isSet‚Ñï; max)
open import Cubical.Data.Nat.Order using (_‚â§_; isProp‚â§)
open import Cubical.Data.Sigma --using (_√ó_; _,_; ‚àÉ; ‚àÉ-syntax;)
open import Cubical.Data.Sum using (_‚äé_)
open import Cubical.Data.Vec using (Vec; _‚à∑_; []; lookup; head; tail; foldr; map) 
open import Cubical.Data.Unit using (Unit; tt; isPropUnit)
open import Cubical.HITs.PropositionalTruncation 

open import Base

open –†–æ–¥–°—Ç—Ä—É–∫—Ç—É—Ä—ã

h‚Ñï : hSet _
h‚Ñï = ‚Ñï , isSet‚Ñï

-- –ø–µ—Ä–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏ –µ–≥–æ –±—É–ª–µ–∞–Ω
M1 : M-–≥—Ä–∞—Ñ 1 _
M1 = ùîÖ zero & base zero & ‚àÖ

-- –≤—Ç–æ—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: –±–∏–Ω–∞—Ä–Ω–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –Ω–∞ –¥–≤—É—Ö –º–Ω–æ–∂–µ—Å—Ç–≤–∞—Ö
M2 : M-–≥—Ä–∞—Ñ 2 _
M2 = ùîÖ zero & ùîá (zero ‚à∑ one ‚à∑ []) & base zero & base one & ‚àÖ

BS1 : BaseSets _
BS1 = h‚Ñï ‚à∑ []

S1 = M-–°—Ç—É–ø–µ–Ω—å BS1 M1 zero
S2 = M-–°—Ç—É–ø–µ–Ω—å BS1 M1 one

_ : S1 ‚â° ‚Ñô ‚Ñï
_ = refl

_ : S2 ‚â° ‚Ñï
_ = refl

hS1 : hSet _
hS1 = S1 , –°—Ç—É–ø–µ–Ω—åIsSet BS1 (M-–°—Ö–µ–º–∞ M1 zero)

hS2 : hSet _
hS2 = S2 , isSet‚Ñï

-- —Å—Ç—É–ø–µ–Ω–∏ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–∞–∫ –±–∞–∑–∏—Å–Ω—ã–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –≤—Ç–æ—Ä–æ–π
BS2 : BaseSets _
BS2 = hS1 ‚à∑ hS2 ‚à∑ []

-- —Å—Ç—É–ø–µ–Ω–∏ —Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
S3 = M-–°—Ç—É–ø–µ–Ω—å BS2 M2 zero
S4 = M-–°—Ç—É–ø–µ–Ω—å BS2 M2 one
S5 = M-–°—Ç—É–ø–µ–Ω—å BS2 M2 two
S6 = M-–°—Ç—É–ø–µ–Ω—å BS2 M2 three

_ : S3 ‚â° ‚Ñô (‚Ñô ‚Ñï √ó ‚Ñï)
_ = refl

_ : S4 ‚â° ‚Ñô ‚Ñï √ó ‚Ñï
_ = refl

_ : S5 ‚â° ‚Ñô ‚Ñï
_ = refl

_ : S6 ‚â° ‚Ñï
_ = refl

-- —Ç–µ–æ—Ä–∏—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –≤ —Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
open import Cubical.Relation.Binary.Base using (Rel)

-- –æ–±–æ–±—â–µ–Ω–∏–µ PropRel –Ω–∞ —Ç–∏–ø—ã —Ä–∞–∑–Ω—ã—Ö —É–Ω–∏–≤–µ—Ä—Å—É–º–æ–≤
PropRel : ‚àÄ {‚ÑìX ‚ÑìY} (X : Type ‚ÑìX) (Y : Type ‚ÑìY) (‚Ñì' : Level)
        ‚Üí Type (‚Ñì-max (‚Ñì-max ‚ÑìX ‚ÑìY) (‚Ñì-suc ‚Ñì'))
PropRel X Y ‚Ñì' = Œ£[ R ‚àà Rel X Y ‚Ñì' ] ‚àÄ a b ‚Üí isProp (R a b)

IsUniversal : ‚àÄ {‚ÑìX ‚ÑìY ‚Ñì'} {X : Type ‚ÑìX} {Y : Type ‚ÑìY} (R : PropRel X Y ‚Ñì') ‚Üí Type _
IsUniversal {X = X} {Y = Y} R = (x : X) (y : Y) ‚Üí R .fst x y

to√ó : ‚àÄ {‚ÑìX ‚ÑìY ‚Ñì} {X : Type ‚ÑìX} {Y : Type ‚ÑìY} (R : PropRel X Y ‚Ñì) ‚Üí X √ó Y ‚Üí hProp ‚Ñì
to√ó R x = uncurry (Œª a b ‚Üí R .fst a b , R .snd a b) x

IsUniversal√ó : ‚àÄ {‚ÑìX ‚ÑìY} {X : Type ‚ÑìX} {Y : Type ‚ÑìY} (R√ó : ‚Ñô (X √ó Y)) ‚Üí hProp _
IsUniversal√ó {X = X} {Y = Y} R√ó =
  (‚àÉ[ R ‚àà PropRel X Y _ ] (IsUniversal R) √ó (R√ó ‚â° to√ó R)) , squash‚ÇÅ

-- –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—É–ø–µ–Ω—å
S7 = M-–°—Ç—É–ø–µ–Ω—å BS2 (ùîÖ zero & M2) zero

-- –º–Ω–æ–∂–µ—Å—Ç–≤–æ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π
universal : S7
universal = IsUniversal√ó
