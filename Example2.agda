-- –ø—Ä–∏–º–µ—Ä—ã: –±–æ–ª—å—à–∞—è –ø—Ä–æ–µ–∫—Ü–∏—è
{-# OPTIONS --cubical --warning=noUnsupportedIndexedMatch #-}
{-# OPTIONS --guardedness #-}

module _ where

open import Cubical.Foundations.Prelude
open import Cubical.Foundations.HLevels
open import Cubical.Foundations.Powerset using (‚Ñô; isSet‚Ñô; _‚àà_)
open import Cubical.Data.Bool using (Bool; true; false; isSetBool)
open import Cubical.Data.Empty using (‚ä•*; isProp‚ä•*)
open import Cubical.Data.FinData using (Fin; zero; suc; one; two; three; four; five; to‚Ñï)
open import Cubical.Data.Nat using (‚Ñï; zero; suc; _+_; _‚à∏_; isSet‚Ñï; max)
open import Cubical.Data.Nat.Order using (_‚â§_; isProp‚â§)
open import Cubical.Data.Sigma using (_√ó_; _,_; ‚àÉ; ‚àÉ-syntax)
open import Cubical.Data.Sum using (_‚äé_)
open import Cubical.Data.Vec using (Vec; _‚à∑_; []; lookup; head; tail; foldr; map) 
open import Cubical.Data.Unit using (Unit; tt; isPropUnit)
open import Cubical.HITs.PropositionalTruncation hiding (map) --using (‚à•_‚à•‚ÇÅ; ‚à£_‚à£‚ÇÅ; squash‚ÇÅ; isPropPropTrunc)

open import Base

h‚Ñï : hSet _
h‚Ñï = ‚Ñï , isSet‚Ñï

hBool : hSet _
hBool = Bool , isSetBool

open –†–æ–¥–°—Ç—Ä—É–∫—Ç—É—Ä—ã 

BS : BaseSets _
BS = h‚Ñï ‚à∑ hBool ‚à∑ []

LS : Vec (–°—Ö–µ–º–∞–°—Ç—É–ø–µ–Ω–∏ 2) _
LS = base zero ‚à∑ base one ‚à∑ []

S1 = –°—Ç—É–ø–µ–Ω—å BS (ùîá LS)

P1 : ‚Ñô S1
P1 (7 , _) = Unit , isPropUnit
P1 (_ , _) = ‚ä•* , isProp‚ä•*

P2 : ‚Ñô ‚Ñï
P2 7 = Unit , isPropUnit
P2 _ = ‚ä•* , (Œª ())

_ : Pr BS {LS = LS} P1 zero ‚â° Œª n ‚Üí ‚à• Œ£ (‚Ñï √ó Bool) (Œª y ‚Üí (P1 y .fst) √ó (lower n ‚â° fst y)) ‚à•‚ÇÅ
                                           , isPropPropTrunc  
_ = refl

Pr1 = Pr BS {LS = LS} P1 zero

_ : Pr1 ‚â° Œª n ‚Üí ‚à• Œ£ (‚Ñï √ó Bool) (Œª y ‚Üí (P1 y .fst) √ó (lower n ‚â° y .fst)) ‚à•‚ÇÅ
                , isPropPropTrunc  
_ = refl

_ : lift 7 ‚àà Pr1
_ = ‚à£ ((7 , true) , (tt , refl)) ‚à£‚ÇÅ

-- _ : 8 ‚àà Pr1 ‚Üí ‚ä•
-- _ = {!!}


_ : Pr BS {LS = LS} P1 one ‚â° Œª n ‚Üí
    ‚à• Œ£ (Œ£ ‚Ñï (Œª _ ‚Üí Bool)) (Œª y ‚Üí Œ£ (P1 y .fst) (Œª _ ‚Üí lower n ‚â° y .snd)) ‚à•‚ÇÅ
    , isPropPropTrunc  
_ = refl

